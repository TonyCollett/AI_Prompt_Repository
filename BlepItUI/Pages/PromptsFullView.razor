@page "/Prompts/"
@inject IPromptData promptData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IUserData userData

<MudStack>
    <MudGrid>
    @if (_promptPage.Any())
    {
        foreach (var prompt in _promptPage)
        {
        <MudItem lg="4" md="6" xs="12">
            <CascadingValue Value="@loggedInUser">
                <PromptCard Prompt="prompt" />
            </CascadingValue>
        </MudItem>
        }
    }
    </MudGrid>
    <MudPaper>
        <MudGrid Class="d-flex align-center mud-width-full py-3">
            <MudItem lg="1" xs="2"></MudItem>
                <MudItem lg="10" xs="8">
                <MudPagination 
                    Selected="_currentPage" 
                    Count="_totalPages" 
                    SelectedChanged="OnPageChanged" 
                    ShowFirstButton="true" 
                    ShowLastButton="true" 
                    BoundaryCount="2" 
                    MiddleCount="3"  
                    Class="justify-center mud-width-full" />
            </MudItem>
            <MudItem lg="1" xs="2">
                <MudNumericField Margin="Margin.Dense" @bind-Value="_currentPage" Min="1" Max="_totalPages" Variant="Variant.Outlined" Label="Page" />
            </MudItem>
        </MudGrid>
    </MudPaper>
</MudStack>

@code {
    private List<Prompt> _promptPage = new List<Prompt>();
    private int _currentPage = 1;
    private int _totalPages = 3;
    public User loggedInUser = null;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuthAsync(userData);

        _promptPage = await promptData.GetPromptsForPageAsync(_currentPage);
    }

    private async Task OnPageChanged(int newPage)
    {
        _currentPage = newPage;
        _promptPage = await promptData.GetPromptsForPageAsync(_currentPage);
        StateHasChanged();
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    loggedInUser = await authProvider.GetUserFromAuthAsync(userData);
    //    _promptList = await promptData.GetAllActivePromptsAsync();
    //    _promptPage = _promptList.Skip((_currentPage - 1) * 12).Take(12).ToList();
    //    _totalPages = (int)Math.Ceiling((double)_promptList.Count / 12);
    //}

    //private void OnPageChanged(int newPage)
    //{
    //    _currentPage = newPage;
    //    _promptPage = _promptList.Skip((_currentPage - 1) * 12).Take(12).ToList();
    //    _totalPages = (int)Math.Ceiling((double)_promptList.Count / 12);
    //}
}