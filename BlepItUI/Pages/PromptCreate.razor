@page "/Prompt/Create"
@using BlepItLibrary.Enums;
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navManager
@inject IUserData userData
@inject IPromptData promptData
@inject IDbConnection dbConnection
@inject ISnackbar Snackbar

<EditForm Model="createdPrompt" OnValidSubmit="CreatePrompt">
    <MudPaper Class="pa-16 ma-2" Elevation="3" Square="true">
                <MudGrid>
                    <MudItem lg="12" sm="12">
                        <MudTextField Variant="Variant.Outlined" T="string" Label="Title" @bind-Value="createdPrompt.Title" Required="true" RequiredError="Title is required!" />
                    </MudItem>
                    <MudItem lg="12" sm="12">
                        <MudTextField Variant="Variant.Outlined" T="string" Label="Description" @bind-Value="createdPrompt.Description" Lines="5" />
                    </MudItem>
                </MudGrid>
                <FileUpload />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" Class="ml-auto">Create</MudButton>
    </MudPaper>

</EditForm>


@code {
    private class CreatePromptModel
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public IEnumerable<byte[]> Attachments { get; set; }
    }

    CreatePromptModel createdPrompt = new();
    private User loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    protected async Task CreatePrompt()
    {
        var prompt = new Prompt
            {
                Title = createdPrompt.Title,
                Description = createdPrompt.Description,
                CreatedBy = loggedInUser,
                LastUpdatedBy = loggedInUser,
                Status = Status.Active,
                Attachments = createdPrompt.Attachments
            };

        await promptData.CreatePromptAsync(prompt);
        Snackbar.Add("Save Successful");
        navManager.NavigateTo($"/");
    }
}
