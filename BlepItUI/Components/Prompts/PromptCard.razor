@inject IDialogService DialogService
@inject IPromptData promptData
@inject IUserData userData
@inject IFavouriteData favouriteData
@inject AuthenticationStateProvider authProvider

@if(Prompt != null){
    <MudCard Outlined="true">
        <MudCardHeader>
            <CardHeaderAvatar>
                <MudTooltip Text="@_createdTooltip" Arrow="true" Placement="Placement.Bottom" Color="Color.Tertiary">
                    <MudAvatar Color="Color.Secondary">GPT</MudAvatar>
                </MudTooltip>
            </CardHeaderAvatar>
            <CardHeaderContent>
                <MudText Typo="Typo.body1">@Prompt.Title</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton @onclick="OpenDialog" Icon="@Icons.Material.Filled.OpenInNew" Variant="Variant.Outlined" Color="Color.Primary" />
            </CardHeaderActions>
        </MudCardHeader>
        @* <MudCardMedia Image="images/pilars.jpg" Height="250" /> *@
        <MudCardContent>
            <MudText Typo="Typo.body2">@Prompt.Description</MudText>
        </MudCardContent>
        <MudCardActions>
            @if (_readOnly == false)
            {
            <MudTooltip Text="Favourite" Arrow="true" Placement="Placement.Bottom" Color="Color.Tertiary">
                <MudToggleIconButton Icon="@Icons.Material.Filled.FavoriteBorder" Color="Color.Default"
                                 ToggledIcon="@Icons.Material.Filled.Favorite" ToggledColor="Color.Default" 
                                 Toggled="@_favourited" ToggledChanged="ToggleFavourite"/>
            </MudTooltip>
            }
            <MudTooltip Text="Share" Arrow="true" Placement="Placement.Bottom" Color="Color.Tertiary">
                <MudMenu Icon="@Icons.Material.Filled.Share" Color="Color.Secondary">
                    <MudMenuItem Icon="@Icons.Custom.Brands.Facebook" IconColor="Color.Primary">Facebook</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Custom.Brands.Twitter" IconColor="Color.Primary">Twitter</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Custom.Brands.Instagram" IconColor="Color.Primary">Instagram</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Custom.Brands.Discord" IconColor="Color.Primary">Discord</MudMenuItem>
                </MudMenu>
            </MudTooltip>
            <MudTooltip Text="Report" Arrow="true" Placement="Placement.Bottom" Color="Color.Tertiary">
                <MudIconButton Icon="@Icons.Material.Filled.Report" Color="Color.Default" />
            </MudTooltip>
            <MudSpacer />
            @if (_readOnly == false) {
            <MudButton StartIcon="@Icons.Material.Filled.Try" Variant="Variant.Outlined" Color="Color.Default" >
                Try It
            </MudButton>
            }
        </MudCardActions>
    </MudCard>

    
}

@code {
    [Parameter] 
    public Prompt Prompt { get; set; }

    [CascadingParameter] 
    public User LoggedInUser { get; set; }

    private string _createdTooltip;
    private bool _readOnly;
    private bool _favourited = false;

    protected async override Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        var userIsAuthenticated = authState.User.Identity.IsAuthenticated;

        _readOnly = !userIsAuthenticated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _createdTooltip = $"Created: {Prompt.DateCreated.ToLocalTime().ToString("dd/MM/yyyy h:mm tt")}";

            _favourited = await favouriteData.IsPromptFavouriteByPromptIdAndUserIdAsync(Prompt.Id, LoggedInUser.Id);

            Console.WriteLine(Prompt.Title + " " + _favourited);
            StateHasChanged();
        }
    }

    private void OpenDialog()
    {
        var parameters = new DialogParameters { ["prompt"]=Prompt };
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<PromptCardDialog>("Simple Dialog", parameters, options);
    }

    private void ToggleFavourite()
    {
        favouriteData.ToggleFavouriteAsync(Prompt.Id, LoggedInUser.Id);
        _favourited = !_favourited;
    }
}