@page "/Settings/"
@using ZoniSMUI.Components.AppSettings
@inject AuthenticationStateProvider authProvider
@inject IDialogService DialogService
@inject IUserData userData
@inject ISettingsData settingsData

<MudOverlay @bind-Visible="showLoadingArt" DarkBackground="true" ZIndex="9999" AutoClose="true">
     <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

@if (settingsList?.Count > 0)
{
    <MudPaper Class="pa-10 ma-1" Elevation="3">
        @foreach (var item in settingsList)
        {
            if (item.ShowInSettings == true)
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudField Label="@item.Name" Variant="Variant.Outlined" HelperText="@item.AddedDate.ToString()">
                        @item.Value
                    </MudField>
                </MudItem>
            }
        }
    </MudPaper>
    <MudPaper>
        <MudStack>
            <MudButton @onclick="OpenStatusConfigDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Status Settings
            </MudButton>
            <MudButton @onclick="OpenCategoryConfigDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Category Settings
            </MudButton>
        </MudStack>
    </MudPaper>
    <MudDivider />
    <MudPaper>
        <MudStack>
            <MudButton @onclick="OpenSampleDataDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Sample Data Configuration
            </MudButton>
        </MudStack>
    </MudPaper>
}
else
{
    <MudText> No settings found </MudText>

    <MudPaper>
        <MudStack>
            <MudButton @onclick="OpenStatusConfigDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Status Settings
            </MudButton>
            <MudButton @onclick="OpenCategoryConfigDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Category Settings
            </MudButton>
        </MudStack>
    </MudPaper>
    <MudDivider />
    <MudPaper>
        <MudStack>
            <MudButton @onclick="OpenSampleDataDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Sample Data Configuration
            </MudButton>
        </MudStack>
    </MudPaper>
}

@code 
{
    List<ZoniSMLibrary.Models.Setting> settingsList;
    private string ApplicationName { get; set; }
    private User _loggedInUser { get; set; }
    private bool showLoadingArt;

    protected async override Task OnInitializedAsync()
    {
        settingsList = await settingsData.GetAllSettingsAsync();
        ApplicationName = "ZoniSM";//settingsList.Where(x => x.Name == "ApplicationName").FirstOrDefault().Value;

        _loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    async Task SaveAppName()
    {
        await settingsData.UpdateSettingAsync("ApplicationName", ApplicationName);
    }   

    private void OpenStatusConfigDialog()
    {
        var parameters = new DialogParameters { ["LoggedInUser"] = _loggedInUser };
        var options = new DialogOptions { CloseOnEscapeKey = false, MaxWidth = MaxWidth.Medium, DisableBackdropClick = true };
        DialogService.Show<StatusConfigDialog>("Configure Statuses", parameters, options);
    }

    private void OpenCategoryConfigDialog()
    {
        var parameters = new DialogParameters { ["LoggedInUser"] = _loggedInUser };
        var options = new DialogOptions { CloseOnEscapeKey = false, MaxWidth = MaxWidth.Medium, DisableBackdropClick = true };
        DialogService.Show<CategoryConfigDialog>("Configure Categories", parameters, options);
    }

    private void OpenSampleDataDialog()
    {
        var parameters = new DialogParameters { ["LoggedInUser"] = _loggedInUser };
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium };
        DialogService.Show<SampleDataDialog>("Set Up Sample Data", parameters, options);
    }

}