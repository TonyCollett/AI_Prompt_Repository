@inject IUserData userData
@attribute [Authorize]

@if (_user != null) {
    <MudPaper>
        <MudGrid>
            <MudItem xs="4">

            </MudItem>
            <MudItem xs="4">
                <MudPaper>
                    <MudText Typo="Typo.caption">Profile Picture Here</MudText>
                </MudPaper>
            </MudItem>
            <MudItem xs="4">

            </MudItem>

            <MudItem xs="4">
                <MudStack>
                    <MudTextField Value="@_user.FirstName" Label="First Name" Variant="Variant.Outlined" ReadOnly="true" Margin="Margin.Dense" />
                    <MudTextField Value="@_user.LastName" Label="Last Name" Variant="Variant.Outlined" ReadOnly="true" Margin="Margin.Dense" />
                    <MudCheckBox Checked="@_user.UserSettings.IsUserVIP" Label="VIP" Color="Color.Primary" />
                </MudStack>
            </MudItem>
            <MudItem xs="4">
                <MudPaper>
                    <MudTextField Value="@_user.DisplayName" Label="Display Name" Variant="Variant.Outlined" ReadOnly="true" Margin="Margin.Dense" />
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudPaper>
}

@code {

    [Parameter]
    public string UserId { get; set; }

    private User _user { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _user =await userData.GetUserByBsonIdAsync(UserId);
    }

}
